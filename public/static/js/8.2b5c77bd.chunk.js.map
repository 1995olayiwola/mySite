{"version":3,"sources":["Components/Auth/Repair.jsx"],"names":["Repair","props","React","useState","number","setNumber","initialData","location","content","categories","username","platform","brand","fault","formValues","setFormValues","error","setError","loading","setLoading","handleChangeWithName2","name","e","target","value","handleChange","val","console","log","fav","handleSubmit","a","preventDefault","persist","user","Parse","User","current","Post","Object","extend","post","acl","ACL","setWriteAccess","setPublicReadAccess","setACL","set","GeoPoint","latitude","lat","longitude","lng","save","history","push","message","className","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","bind","this","title","options","label","handleDescription","formatted_address","onHandleSelect","input","fV","variant"],"mappings":"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","file":"static/js/8.2b5c77bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport MyAlert from '../../Utils/MyAlert';\r\nimport Parse from 'parse';\r\nimport Loading from '../../Utils/Loading';\r\nimport {\r\n   Form,\r\n   Button\r\n} from 'react-bootstrap';\r\nimport Location from '../../Widgets/LocationBox/Location';\r\n//import {Select} from 'react-select';\r\nimport RichTextArea from '../../Widgets/RichTextArea'\r\nimport SingleSelect from '../../Widgets/ReactSelect/SingleSelect';\r\n\r\nfunction Repair(props) {\r\nconst[number,setNumber]= React.useState(null);\r\n   \r\n   const tableName = \"TotalInfo5\";\r\n   const initialData = {\r\n      location: {},\r\n      content: '',\r\n      categories: null,\r\n      number:number,\r\n      username:\"\",\r\n      platform:\"\",\r\n      brand:\"\",\r\n      fault:\"\"\r\n\r\n      \r\n      \r\n\r\n   };\r\n\r\n   \r\n   const [formValues, setFormValues] = React.useState(initialData);\r\n   const [error, setError] = React.useState(null);\r\n   const [loading, setLoading] = React.useState(false);\r\n  \r\n  \r\n  const handleChangeWithName =(e)=> {\r\n    console.log('onChange fired with value:', +e.target.value);\r\n    setNumber(()=>{\r\n       return (+e.target.value)\r\n    })\r\n  \r\n  }\r\n    const handleChangeWithName2 =(name,e)=> {\r\n    \r\n    setFormValues(()=>{\r\n       return {\r\n           ...formValues,\r\n           [e.target.name]:e.target.value\r\n       }\r\n    })\r\n  \r\n  }\r\n   \r\n\r\n   const handleLocationSelect = (name, input) => {\r\n      setFormValues((fV) => {\r\n         return {\r\n            ...fV,\r\n            [name]: input\r\n         }\r\n      })\r\n   }\r\n\r\n   \r\n    \r\n\r\n  \r\n \r\n\r\n   const handleChange = (name, val) => {\r\n\r\n      console.log('name is', name, 'val is', val)\r\n      setFormValues((fav) => {\r\n         return {\r\n            ...fav,\r\n            [name]: val\r\n         };\r\n      });\r\n\r\n      console.log('formValues:', formValues);\r\n   };\r\n   \r\n   const handleSubmit = async (e) => {\r\n      try {\r\n         e.preventDefault();\r\n         e.persist();\r\n         await setLoading(true);\r\n         await setError(null);\r\n         const user = Parse.User.current();\r\n         const Post = Parse.Object.extend(tableName);\r\n         const post = new Post();\r\n         // write ACL code here\r\n         const acl = new Parse.ACL();\r\n         acl.setWriteAccess(user, true);\r\n         //private user read access\r\n         //acl.setReadAccess(user,true);\r\n         \r\n         acl.setPublicReadAccess(true);\r\n         post.setACL(acl);\r\n         //post users\r\n         post.set('location', formValues.location);\r\n         post.set('location_geo',\r\n            new Parse.GeoPoint({\r\n               latitude: formValues.location.lat,\r\n               longitude: formValues.location.lng\r\n            }))\r\n            post.set('content',formValues.content)\r\n            post.set('number',number);\r\n            post.set('username',formValues.username);\r\n            post.set('brand',formValues.brand);\r\n            post.set('fault',formValues.fault);\r\n            post.set('platform',formValues.platform);\r\n        \r\n   \r\n         post.set('categories', formValues.categories);\r\n         //post.set('location2',formValues.location2);\r\n         //post.set('location_geo_2',2)\r\n\r\n         post.set('user', user);\r\n         console.log('post is', post);\r\n         await post.save();\r\n         await setLoading(false);\r\n         props.history.push('/add4');\r\n      } catch (eror) {\r\n         console.log('eror is :', eror);\r\n\r\n         await setLoading(false);\r\n         await setError(error.message);\r\n      }\r\n   };\r\n    return (\r\n        <div className=\"repair\">\r\n   \r\n\r\n           <Form onSubmit={handleSubmit} >\r\n             <Form.Group controlId=\"formBasicName\">\r\n    <Form.Label>Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter your name\" onChange= {handleChangeWithName2.bind(this,'username')} value={formValues.value} name=\"username\"/>\r\n </Form.Group>  \r\n<Form.Group controlId=\"formBasicNumber\">\r\n    <Form.Label>Enter Phone number</Form.Label>\r\n    <Form.Control type=\"number\" placeholder=\"Enter your phone number\" onChange= {handleChangeWithName} value={number} />\r\n </Form.Group>\r\n  \r\n <Form.Group controlId=\"formBasicAddress\">\r\n <Form.Label>Enter Pos brand</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter Pos brand\" onChange= {handleChangeWithName2.bind(this,'brand')} value={formValues.value} name=\"brand\"/>\r\n </Form.Group>\r\n <Form.Group controlId=\"formBasicAddress\">\r\n <Form.Label>Enter fault</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter your fault\" onChange= {handleChangeWithName2.bind(this,'fault')} value={formValues.value} name=\"fault\" />\r\n </Form.Group>\r\n <Form.Group controlId=\"formBasicAddress\">\r\n <Form.Label>Pos platform</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter your current platform\" onChange= {handleChangeWithName2.bind(this,'platform')} value={formValues.value} name=\"platform\" />\r\n </Form.Group>\r\n \r\n  \r\n\r\n  <SingleSelect title=\"Gender\"  handleChange={handleChange.bind(this,'categories')} options = {[\r\n    { value: 'Male', label: 'Male' },\r\n                    { value: 'Female ', label: 'Female' },\r\n                                                                                      \r\n  ]}\r\n  />\r\n  <RichTextArea \r\n  handleDescription={handleChange.bind(this,'content')}\r\n   value={formValues.content}\r\n   placeholder=\"Enter your message\"\r\n   title=\"Quantity\"\r\n   \r\n   />\r\n        \r\n <Location \r\n              title=\"Enter your current address\"\r\n              value={(formValues.location && formValues.location.formatted_address)||''}\r\n              onHandleSelect={handleLocationSelect.bind(this,'location')}\r\n              options=\"\"\r\n              />\r\n               \r\n               \r\n               {error && <MyAlert   message={error}/>}\r\n               {loading && <Loading />}\r\n                <Button variant=\"primary\" type=\"submit\"  >\r\n    Submit\r\n  </Button>\r\n           </Form>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n     \r\n   }\r\n\r\n   export default Repair;\r\n"],"sourceRoot":""}