{"version":3,"sources":["Projects/Project005/Payment.jsx"],"names":["Pagination","page_rw","startRow_rw","SetPage_rw","SetStartRow_rw","max","Total_row","Total_pages","url","history","Math","min","border","align","width","cellPadding","style","cursor","onClick","push","prevPage","prevStart","nextPage","nextStart","Add","props","console","log","React","useState","results","count","data","setData","location","keyword","page","match","params","pageId","start","ceil","lat","lng","Parse","GeoPoint","latitude","longitude","useEffect","a","userLocation","query","Query","withinMiles","descending","skip","limit","withCount","find","records","process","className","marginTop","marginLeft","marginRight","justifyContent","flexWrap","length","striped","bordered","hover","map","item","category","get","categoryLabel","label","id"],"mappings":"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","file":"static/js/16.b619e873.chunk.js","sourcesContent":["import React from 'react';\r\nimport Parse from 'parse';\r\n\r\n//import {Link} from 'react-router-dom';\r\n//import Add from './Add';\r\nimport moment from 'moment';\r\nimport Location from '../../Widgets/LocationBox/Location';\r\nimport Input from '../../Widgets/Input'\r\n//import renderHTML from 'react-render-html';\r\nimport {Button, Table} from 'react-bootstrap'\r\n//import Header from './Header';\r\n //import Footer from './Footer';\r\n\r\n function Pagination({page_rw,startRow_rw,SetPage_rw,SetStartRow_rw,max,Total_row,Total_pages,url,history}){\r\n     return <div>\r\n         <div>Records {startRow_rw + 1} to {Math.min(startRow_rw + max,Total_row)} of {Total_row}</div>\r\n\r\n         <table border=\"0\" align=\"center\" width=\"50%\" cellPadding=\"5\">\r\n<tbody>\r\n    <tr>\r\n        <td><span style={{cursor:'pointer'}} onClick={()=>{\r\n            SetPage_rw(0);\r\n    SetStartRow_rw(0);\r\n      history.push(`${url}/0`)\r\n        }}> First</span></td>\r\n        <td><span  style={{cursor:'pointer'}}  onClick={()=>{\r\n            const prevPage = Math.max(0,page_rw - 1);\r\n    const prevStart = prevPage*max;\r\n    SetPage_rw(prevPage);\r\n    SetStartRow_rw(prevStart);\r\n    history.push(`${url}/${prevPage}`)\r\n        }} >Previous</span></td>\r\n<td><span onClick={()=>{\r\n    const nextPage = Math.min(page_rw + 1,Total_pages);\r\n    const nextStart = nextPage*max;\r\n    SetPage_rw(nextPage);\r\n    SetStartRow_rw(nextStart);\r\n    history.push(`${url}/${nextPage}`)\r\n}} style={{cursor:'pointer'}}>Next</span></td>\r\n        <td><span onClick={()=>{\r\n\r\n    const nextStart = Total_pages*max;\r\n    SetPage_rw(Total_pages);\r\n    SetStartRow_rw(nextStart);\r\n    history.push(`${url}/${Total_pages}`)\r\n}} style={{cursor:'pointer'}}>Last</span></td>\r\n      \r\n    </tr>\r\n</tbody>\r\n         </table>\r\n     </div>\r\n }\r\n\r\n const Add =(props)=> {\r\n     const handleChange=(e)=>{\r\ne.persist();\r\nsetFormValues((fv)=>{\r\n    return {...fv,[e.target.name]:e.target.value}\r\n})\r\n     };\r\n     console.log('props is',props)\r\n     const[data,setData]=React.useState({\r\n          results:[],\r\n            count:0\r\n     });\r\n     const initialData = {\r\n        location:null,\r\n        keyword:''\r\n    \r\n\r\n    };\r\n    const history=props.history;\r\n    const[location,setLocation] = React.useState(null);\r\n    const[keyword,setKeyword] = React.useState(null);\r\n    const[formValues,setFormValues]=React.useState(initialData);\r\n     const max=5;\r\n     const page=props.match.params.pageId ||0;\r\n     const start = page * max;\r\nconst[page_rw,SetPage_rw]= React.useState(page);\r\nconst[startRow_rw,SetStartRow_rw]= React.useState(start);\r\nconst url = '/page';\r\nconst Total_row = (data && data.count) ||0;\r\nconst Total_pages = Math.ceil(Total_row/max) - 1;\r\nconst handleLocationSelect=(name,input)=>{\r\nsetFormValues((fV)=>{\r\nreturn {...fV,[name]:input}\r\n})\r\n   }\r\n\r\n     const lat= location && location.lat;\r\n const lng=location && location.lng;\r\n let loc= null;\r\n if(lat && lng){\r\nloc = new Parse.GeoPoint({\r\n    latitude:lat,\r\n    longitude:lng\r\n})\r\n }\r\n   React.useEffect(()=>{\r\n           \r\n            const process=async()=>{\r\n const lat= null;\r\n const lng=null;\r\n let userLocation= null;\r\n if(lat && lng){\r\nuserLocation = new Parse.GeoPoint({\r\n    latitude:lat,\r\n    longitude:lng,\r\n})\r\n }\r\nconst query = new Parse.Query('TotalInfo8');\r\nif(userLocation){\r\nquery.withinMiles('location_geo',userLocation,10000,true)\r\n}else{\r\n    query.descending('createdAt');\r\n\r\n}\r\nquery.skip(startRow_rw);\r\nquery.limit(max);\r\n\r\nquery.withCount();\r\nconst records = await query.find();\r\nawait setData(records);\r\n            }\r\n            process();\r\n        },[startRow_rw,lat,lng])\r\n        console.log('data is:',data)\r\n    return (\r\n       <div>\r\n         \r\n<div className=\"row\" style={{marginTop:'10px',marginLeft:'10px',marginRight:'10px',justifyContent:'center',flexWrap:'wrap'}}>\r\n    \r\n   \r\n              \r\n   \r\n    <div className=\"col-12\">\r\n        { data.results.length > 0 && (\r\n            <>\r\n<Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      \r\n      <th>Bank categories</th>\r\n     <th> Account name</th>\r\n      <th>Account number</th>\r\n      \r\n      \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {data.results.map((item)=>{\r\n          const category = item.get('categories');\r\n          const categoryLabel = category && category.label;\r\n         \r\n         // let distance=null;\r\n          if(loc){\r\n              //distance= item.get('location_geo').milesTo(loc).toFixed(2);\r\n\r\n          }\r\n          return (\r\n              <tr key={item.id}>\r\n     \r\n      \r\n      <td>{categoryLabel}</td>\r\n      <td>{item.get('formValues')}</td>\r\n      <td>{item.get('number1')}</td>\r\n      \r\n       \r\n     \r\n \r\n    </tr>\r\n  \r\n          );\r\n      })}\r\n  \r\n  \r\n   \r\n  </tbody>\r\n</Table>\r\n<Pagination page_rw={page_rw} startRow_rw={startRow_rw} SetPage_rw={SetPage_rw} \r\nSetStartRow_rw={SetStartRow_rw} max={max} Total_row={Total_row} Total_pages={Total_pages} url={url} history={history}/>\r\n</>\r\n        )}\r\n        \r\n        \r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n       </div>\r\n        \r\n    )\r\n}\r\nexport default Add;"],"sourceRoot":""}