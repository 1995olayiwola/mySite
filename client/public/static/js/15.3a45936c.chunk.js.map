{"version":3,"sources":["Projects/Project005/Add2.jsx"],"names":["Pagination","page_rw","startRow_rw","SetPage_rw","SetStartRow_rw","max","Total_row","Total_pages","url","history","Math","min","border","align","width","cellPadding","style","cursor","onClick","push","prevPage","prevStart","nextPage","nextStart","Add2","props","console","log","React","useState","results","count","data","setData","location","setLocation","keyword","formValues","setFormValues","page","match","params","pageId","start","ceil","lat","lng","loc","Parse","GeoPoint","latitude","longitude","useEffect","a","userLocation","query","Query","withinMiles","descending","skip","limit","withCount","find","records","process","className","marginTop","marginLeft","marginRight","justifyContent","flexWrap","title","value","formatted_address","onHandleSelect","name","input","fV","bind","options","placeholder","handleChange","e","persist","fv","target","type","variant","length","striped","bordered","hover","map","item","category","get","categoryLabel","label","distance","milesTo","toFixed","id","renderHTML","fontWeight","moment","fromNow"],"mappings":"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","file":"static/js/15.3a45936c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Parse from 'parse';\r\n//import {Link} from 'react-router-dom';\r\n//import Add from './Add';\r\nimport moment from 'moment';\r\nimport Location from '../../Widgets/LocationBox/Location';\r\nimport Input from '../../Widgets/Input'\r\nimport renderHTML from 'react-render-html';\r\nimport {Button, Table} from 'react-bootstrap'\r\n//import Header from './Header';\r\n //import Footer from './Footer';\r\n\r\n function Pagination({page_rw,startRow_rw,SetPage_rw,SetStartRow_rw,max,Total_row,Total_pages,url,history}){\r\n     return <div>\r\n         <div>Records {startRow_rw + 1} to {Math.min(startRow_rw + max,Total_row)} of {Total_row}</div>\r\n\r\n         <table border=\"0\" align=\"center\" width=\"50%\" cellPadding=\"5\">\r\n<tbody>\r\n    <tr>\r\n        <td><span style={{cursor:'pointer'}} onClick={()=>{\r\n            SetPage_rw(0);\r\n    SetStartRow_rw(0);\r\n      history.push(`${url}/0`)\r\n        }}> First</span></td>\r\n        <td><span  style={{cursor:'pointer'}}  onClick={()=>{\r\n            const prevPage = Math.max(0,page_rw - 1);\r\n    const prevStart = prevPage*max;\r\n    SetPage_rw(prevPage);\r\n    SetStartRow_rw(prevStart);\r\n    history.push(`${url}/${prevPage}`)\r\n        }} >Previous</span></td>\r\n<td><span onClick={()=>{\r\n    const nextPage = Math.min(page_rw + 1,Total_pages);\r\n    const nextStart = nextPage*max;\r\n    SetPage_rw(nextPage);\r\n    SetStartRow_rw(nextStart);\r\n    history.push(`${url}/${nextPage}`)\r\n}} style={{cursor:'pointer'}}>Next</span></td>\r\n        <td><span onClick={()=>{\r\n\r\n    const nextStart = Total_pages*max;\r\n    SetPage_rw(Total_pages);\r\n    SetStartRow_rw(nextStart);\r\n    history.push(`${url}/${Total_pages}`)\r\n}} style={{cursor:'pointer'}}>Last</span></td>\r\n      \r\n    </tr>\r\n</tbody>\r\n         </table>\r\n     </div>\r\n }\r\n\r\n const Add2 =(props)=> {\r\n     const handleChange=(e)=>{\r\ne.persist();\r\nsetFormValues((fv)=>{\r\n    return {...fv,[e.target.name]:e.target.value}\r\n})\r\n     };\r\n     console.log('props is',props)\r\n     const[data,setData]=React.useState({\r\n          results:[],\r\n            count:0\r\n     });\r\n     const initialData = {\r\n        location:null,\r\n        keyword:''\r\n    \r\n\r\n    };\r\n    const history=props.history;\r\n    const[location,setLocation] = React.useState(null);\r\n    const[keyword,setKeyword] = React.useState(null);\r\n    const[formValues,setFormValues]=React.useState(initialData);\r\n     const max=5;\r\n     const page=props.match.params.pageId ||0;\r\n     const start = page * max;\r\nconst[page_rw,SetPage_rw]= React.useState(page);\r\nconst[startRow_rw,SetStartRow_rw]= React.useState(start);\r\nconst url = '/page';\r\nconst Total_row = (data && data.count) ||0;\r\nconst Total_pages = Math.ceil(Total_row/max) - 1;\r\nconst handleLocationSelect=(name,input)=>{\r\nsetFormValues((fV)=>{\r\nreturn {...fV,[name]:input}\r\n})\r\n   }\r\n\r\n     const lat= location && location.lat;\r\n const lng=location && location.lng;\r\n let loc= null;\r\n if(lat && lng){\r\nloc = new Parse.GeoPoint({\r\n    latitude:lat,\r\n    longitude:lng\r\n})\r\n }\r\n   React.useEffect(()=>{\r\n           \r\n            const process=async()=>{\r\n const lat= null;\r\n const lng=null;\r\n let userLocation= null;\r\n if(lat && lng){\r\nuserLocation = new Parse.GeoPoint({\r\n    latitude:lat,\r\n    longitude:lng,\r\n})\r\n }\r\nconst query = new Parse.Query('TotalInfo2');\r\nif(userLocation){\r\nquery.withinMiles('location_geo',userLocation,10000,true)\r\n}else{\r\n    query.descending('createdAt');\r\n\r\n}\r\nquery.skip(startRow_rw);\r\nquery.limit(max);\r\n\r\nquery.withCount();\r\nconst records = await query.find();\r\nawait setData(records);\r\n            }\r\n            process();\r\n        },[startRow_rw,lat,lng])\r\n        console.log('data is:',data)\r\n    return (\r\n       <div>\r\n         \r\n<div className=\"row\" style={{marginTop:'10px',marginLeft:'10px',marginRight:'10px',justifyContent:'center',flexWrap:'wrap'}}>\r\n    <div className=\"col-12\"><h3>Search Records</h3>\r\n    <Location \r\n              title=\"Enter the  address\"\r\n              value={(formValues.location && formValues.location.formatted_address)||''}\r\n              onHandleSelect={handleLocationSelect.bind(this,'location')}\r\n              options=\"\"\r\n              />\r\n              <Input \r\n              name=\"keyword\"\r\n              title=\"Keyword\"\r\n              placeholder=\" Search for keywords\"\r\n              value={formValues.keyword}\r\n              handleChange={handleChange.bind('',)}\r\n              />\r\n              <Button type=\"button\" variant=\"primary\"\r\n              onClick={()=>{\r\n                  setLocation(formValues.location);\r\n              }}\r\n              >Search</Button>\r\n    </div>\r\n    <div className=\"col-12\">\r\n        { data.results.length > 0 && (\r\n            <>\r\n<Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>id</th>\r\n      <th>Message</th>\r\n      <th>Location </th>\r\n      <th>Bank categories</th>\r\n      <th>Amount withdraw</th>\r\n      <th>Charges</th>\r\n      \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {data.results.map((item)=>{\r\n          const category = item.get('categories');\r\n          const categoryLabel = category && category.label;\r\n          let distance=null;\r\n          if(loc){\r\n              distance= item.get('location_geo').milesTo(loc).toFixed(2);\r\n          }\r\n          return (\r\n              <tr key={item.id}>\r\n      <td>{item.id}</td>\r\n      <td>{renderHTML(item.get('content'))}</td>\r\n      <td>\r\n          <div>{item.get('location').formatted_address}</div>\r\n          <div style={{fontWeight:'bold'}}>{moment(item.get('createdAt')).fromNow()}</div>\r\n         {distance &&  <div style={{fontWeight:'bold'}}>{distance} miles</div>}  \r\n          \r\n      </td>\r\n      <td>{categoryLabel}</td>\r\n      <td>{item.get('number')}</td>\r\n      <td>{item.get('number2')}</td>\r\n      \r\n    </tr>\r\n          );\r\n      })}\r\n    \r\n  \r\n   \r\n  </tbody>\r\n</Table>\r\n<Pagination page_rw={page_rw} startRow_rw={startRow_rw} SetPage_rw={SetPage_rw} \r\nSetStartRow_rw={SetStartRow_rw} max={max} Total_row={Total_row} Total_pages={Total_pages} url={url} history={history}/>\r\n</>\r\n        )}\r\n        \r\n        \r\n    </div>\r\n    \r\n</div>\r\n\r\n       </div>\r\n        \r\n    )\r\n}\r\nexport default Add2;"],"sourceRoot":""}