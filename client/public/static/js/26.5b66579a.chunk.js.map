{"version":3,"sources":["Projects/Project005/Transfer.jsx"],"names":["Transfer","props","React","useState","number","setNumber","number2","setNumber2","initialData","location","content","categories","formValues","setFormValues","error","setError","loading","setLoading","handleChange","name","val","console","log","fav","handleSubmit","e","a","preventDefault","persist","user","Parse","User","current","Post","Object","extend","post","acl","ACL","setWriteAccess","setReadAccess","setACL","set","GeoPoint","latitude","lat","longitude","lng","save","history","push","message","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","target","value","title","bind","this","options","label","handleDescription","formatted_address","onHandleSelect","input","fV","variant"],"mappings":"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","file":"static/js/26.5b66579a.chunk.js","sourcesContent":["import React from 'react';\r\nimport MyAlert from '../../Utils/MyAlert';\r\nimport Parse from 'parse';\r\nimport Loading from '../../Utils/Loading';\r\nimport {\r\n   Form,\r\n   Button\r\n} from 'react-bootstrap';\r\nimport Location from '../../Widgets/LocationBox/Location';\r\n//import {Select} from 'react-select';\r\nimport RichTextArea from '../../Widgets/RichTextArea'\r\nimport SingleSelect from '../../Widgets/ReactSelect/SingleSelect';\r\n\r\nfunction Transfer(props) {\r\nconst[number,setNumber]= React.useState(null);\r\n   const[number2,setNumber2]= React.useState(null);\r\n   const tableName = \"TotalInfo\";\r\n   const initialData = {\r\n      location: {},\r\n      content: '',\r\n      categories: null,\r\n      number:number,\r\n      number2:number2,\r\n      \r\n\r\n   };\r\n\r\n   \r\n   const [formValues, setFormValues] = React.useState(initialData);\r\n   const [error, setError] = React.useState(null);\r\n   const [loading, setLoading] = React.useState(false);\r\n  \r\n  \r\n  const handleChangeWithName =(e)=> {\r\n    console.log('onChange fired with value:', +e.target.value);\r\n    setNumber(()=>{\r\n       return (+e.target.value)\r\n    })\r\n  \r\n  }\r\n   const handleChangeWithName2 =(e)=> {\r\n    console.log('onChange fired with value:', +e.target.value);\r\n    setNumber2(()=>{\r\n       return (+e.target.value)\r\n    })\r\n  }\r\n\r\n   const handleLocationSelect = (name, input) => {\r\n      setFormValues((fV) => {\r\n         return {\r\n            ...fV,\r\n            [name]: input\r\n         }\r\n      })\r\n   }\r\n\r\n   \r\n    \r\n\r\n  \r\n \r\n\r\n   const handleChange = (name, val) => {\r\n\r\n      console.log('name is', name, 'val is', val)\r\n      setFormValues((fav) => {\r\n         return {\r\n            ...fav,\r\n            [name]: val\r\n         };\r\n      });\r\n\r\n      console.log('formValues:', formValues);\r\n   };\r\n   \r\n   const handleSubmit = async (e) => {\r\n      try {\r\n         e.preventDefault();\r\n         e.persist();\r\n         await setLoading(true);\r\n         await setError(null);\r\n         const user = Parse.User.current();\r\n         const Post = Parse.Object.extend(tableName);\r\n         const post = new Post();\r\n         // write ACL code here\r\n         const acl = new Parse.ACL();\r\n         acl.setWriteAccess(user, true);\r\n         //private user read access\r\n         acl.setReadAccess(user,true);\r\n         \r\n         //acl.setPublicReadAccess(true);\r\n         post.setACL(acl);\r\n         //post users\r\n         post.set('location', formValues.location);\r\n         post.set('location_geo',\r\n            new Parse.GeoPoint({\r\n               latitude: formValues.location.lat,\r\n               longitude: formValues.location.lng\r\n            }))\r\n            post.set('content',formValues.content)\r\n            post.set('number',number)\r\n              post.set('number2',number2)\r\n   \r\n         post.set('categories', formValues.categories);\r\n         //post.set('location2',formValues.location2);\r\n         //post.set('location_geo_2',2)\r\n\r\n         post.set('user', user);\r\n         console.log('post is', post);\r\n         await post.save();\r\n         await setLoading(false);\r\n         props.history.push('/add');\r\n      } catch (eror) {\r\n         console.log('eror is :', eror);\r\n\r\n         await setLoading(false);\r\n         await setError(error.message);\r\n      }\r\n   };\r\n    return (\r\n        <div>\r\n   \r\n\r\n           <Form onSubmit={handleSubmit} >\r\n               \r\n<Form.Group controlId=\"formBasicNumber\">\r\n    <Form.Label>Enter the amount Transfer</Form.Label>\r\n    <Form.Control type=\"number\" placeholder=\"Enter Amount in #\" onChange= {handleChangeWithName} value={number} />\r\n </Form.Group>\r\n \r\n <Form.Group controlId=\"formBasicNumber\">\r\n    <Form.Label>Enter the charges</Form.Label>\r\n    <Form.Control type=\"number\" placeholder=\"Enter Amount in #\"  name=\"number\" onChange= {handleChangeWithName2}  value={number2}/>\r\n </Form.Group>\r\n  \r\n<SingleSelect title=\"Choose bank category\"  handleChange={handleChange.bind(this,'categories')} options = {[\r\n    { value: 'Gt bank', label: 'Gt bank' },\r\n    { value: 'First bank', label: 'First bank' },\r\n    { value: 'Sterling Bank', label: 'Sterling bank' },\r\n    { value: 'Access Bank', label: 'Access Bank' },\r\n    { value: 'Fidelity Bank', label: 'Fidelity Bank' },\r\n    { value: 'First City Monument Bank', label: 'First City Monument Bank' },\r\n    { value: 'Union Bank ', label: 'Union Bank ' },\r\n    { value: 'United Bank', label: 'United Bank' },\r\n    { value: 'Zenith Bank ', label: 'Zenith Bank ' },\r\n       { value: 'Citibank ', label: 'Citibank ' },\r\n          { value: 'Ecobank', label: 'Ecobank ' },\r\n             { value: 'Heritage Bank ', label: 'Heritage Bank ' },\r\n                { value: 'Keystone Bank ', label: 'Keystone Bank ' },\r\n                   { value: 'Polaris Bank  ', label: 'Polaris Bank  ' },\r\n                      { value: 'Stanbic IBTC Bank ', label: 'Stanbic IBTC Bank ' },\r\n                         { value: 'Standard Chartered ', label: 'Standard Chartered' },\r\n                            { value: ' Titan Trust Bank ', label: 'Titan Trust Bank ' },\r\n                               { value: 'Unity Bank Plc ', label: 'Unity Bank Plc ' },\r\n                                  { value: 'Wema Bank Plc ', label: 'Wema Bank Plc ' },\r\n                                  { value: 'Globus Bank Limited ', label: 'Globus Bank Limited ' },\r\n                                  { value: 'SunTrust Bank Nigeria Limited ', label: 'SunTrust Bank Nigeria Limited ' },\r\n                                  { value: 'Providus Bank Limited', label: 'Providus Bank Limited ' },\r\n                                  { value: 'Jaiz Bank Plc ', label: 'Jaiz Bank Plc ' },\r\n                                    { value: 'TAJBank Limited ', label: 'TAJBank Limited ' },\r\n                                      { value: 'Mutual Trust Microfinance Bank', label: 'Mutual Trust Microfinance Bank ' },\r\n                                        { value: 'Finca Microfinance Bank Limited ', label: 'Finca Microfinance Bank Limited ' },\r\n                                          { value: 'Coronation Merchant Bank', label: 'Coronation Merchant Bank ' },\r\n                                            { value: 'FBNQuest Merchant Bank ', label: 'FBNQuest Merchant Bank' },\r\n                                                                                      { value: 'FSDH Merchant Bank ', label: 'FSDH Merchant Bank' },\r\n                                                                                                                                { value: 'Rand Merchant Bank', label: 'Rand Merchant Bank' },\r\n                                                                                                                                                                          { value: 'Nova Merchant Bank ', label: 'Nova Merchant Bank' }\r\n  ]}\r\n  />\r\n  <RichTextArea \r\n  handleDescription={handleChange.bind(this,'content')}\r\n   value={formValues.content}\r\n   placeholder=\"Enter your message\"\r\n   title=\"Message area\"\r\n   \r\n   />\r\n        \r\n <Location \r\n              title=\"Enter your current address\"\r\n              value={(formValues.location && formValues.location.formatted_address)||''}\r\n              onHandleSelect={handleLocationSelect.bind(this,'location')}\r\n              options=\"\"\r\n              />\r\n               \r\n               \r\n               {error && <MyAlert   message={error}/>}\r\n               {loading && <Loading />}\r\n                <Button variant=\"primary\" type=\"submit\"  >\r\n    Submit\r\n  </Button>\r\n           </Form>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n     \r\n   }\r\n\r\n   export default Transfer;"],"sourceRoot":""}