{"version":3,"sources":["Projects/Project005/Withdraw.jsx"],"names":["Withdraw","Props","React","useState","number","setNumber","number2","setNumber2","initialData","location","content","categories","formValues","setFormValues","error","setError","loading","setLoading","handleChange","name","val","console","log","fav","handleSubmit","e","a","preventDefault","persist","user","Parse","User","current","Post","Object","extend","post","acl","ACL","setWriteAccess","setReadAccess","setACL","set","GeoPoint","latitude","lat","longitude","lng","save","history","push","message","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","target","value","title","bind","this","options","label","handleDescription","formatted_address","onHandleSelect","input","fV","variant"],"mappings":"yQAgLeA,UAtKf,SAAkBC,GAAQ,IAAD,EACAC,IAAMC,SAAS,MADf,mBACnBC,EADmB,KACZC,EADY,OAEKH,IAAMC,SAAS,MAFpB,mBAEhBG,EAFgB,KAERC,EAFQ,KAIfC,EAAc,CAChBC,SAAS,GACTC,QAAQ,GACPC,WAAW,KACZP,OAAOA,EACPE,QAAQA,GATS,EAaAJ,IAAMC,SAAS,GAbf,gCAcFD,IAAMC,SAAS,IAdb,gCAeWD,IAAMC,SAASK,IAf1B,mBAefI,EAfe,KAeJC,EAfI,OAgBCX,IAAMC,SAAS,MAhBhB,mBAgBfW,EAhBe,KAgBTC,EAhBS,OAiBKb,IAAMC,UAAS,GAjBpB,mBAiBfa,EAjBe,KAiBPC,EAjBO,KAuCfC,EAAe,SAACC,EAAKC,GAExBC,QAAQC,IAAI,UAAUH,EAAK,SAASC,GACvCP,GAAc,SAACU,GACX,OAAO,2BAAIA,GAAX,kBAAgBJ,EAAMC,OAGtBC,QAAQC,IAAI,cAAcV,IAGxBY,EAAY,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEAEzBD,EAAEE,iBACFF,EAAEG,UAHuB,SAInBX,GAAW,GAJQ,uBAKlBF,EAAS,MALS,cAMnBc,EAAOC,IAAMC,KAAKC,UAClBC,EAAOH,IAAMI,OAAOC,OArDJ,cAsDhBC,EAAO,IAAIH,GAEXI,EAAK,IAAIP,IAAMQ,KACjBC,eAAeV,GAAK,GAExBQ,EAAIG,cAAcX,GAAK,GAEvBO,EAAKK,OAAOJ,GAEZD,EAAKM,IAAI,WAAW9B,EAAWH,UAC/B2B,EAAKM,IAAI,eACT,IAAIZ,IAAMa,SAAS,CACfC,SAAShC,EAAWH,SAASoC,IAC7BC,UAAWlC,EAAWH,SAASsC,OAEnCX,EAAKM,IAAI,SAAStC,GAClBgC,EAAKM,IAAI,UAAUpC,GACnB8B,EAAKM,IAAI,aAAa9B,EAAWD,YAIjCyB,EAAKM,IAAI,OAAOb,GAChBR,QAAQC,IAAI,UAAUc,GA9BG,UA+BnBA,EAAKY,OA/Bc,yBAgCnB/B,GAAW,GAhCQ,QAiCzBhB,EAAMgD,QAAQC,KAAK,SAjCM,yDAmCzB7B,QAAQC,IAAI,YAAZ,MAnCyB,UAqClBL,GAAW,GArCO,yBAsClBF,EAASD,EAAMqC,SAtCG,0DAAH,sDAyClB,OACI,8BAGG,eAAC,IAAD,CAAMC,SAAU5B,EAAhB,UAEX,eAAC,IAAK6B,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAAC,IAAKC,MAAN,wCACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,SAASC,YAAY,oBAAoBC,SA/EnC,SAAClC,GAC1BJ,QAAQC,IAAI,8BAA+BG,EAAEmC,OAAOC,OACpDxD,GAAU,WACP,OAASoB,EAAEmC,OAAOC,UA4EwEA,MAAOzD,OAGvG,eAAC,IAAKiD,MAAN,CAAYC,UAAU,kBAAtB,UACG,cAAC,IAAKC,MAAN,gCACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,SAASC,YAAY,oBAAoBC,SA7EjC,SAAClC,GAC5BJ,QAAQC,IAAI,8BAA+BG,EAAEmC,OAAOC,OACpDtD,GAAW,WACR,OAASkB,EAAEmC,OAAOC,UA0EyE1C,KAAK,SAAS0C,MAAOvD,OAGvH,cAAC,IAAD,CAAcwD,MAAM,uBAAwB5C,aAAcA,EAAa6C,KAAKC,KAAK,cAAeC,QAAW,CACvG,CAAEJ,MAAO,UAAWK,MAAO,WAC3B,CAAEL,MAAO,aAAcK,MAAO,cAC9B,CAAEL,MAAO,gBAAiBK,MAAO,iBACjC,CAAEL,MAAO,cAAeK,MAAO,eAC/B,CAAEL,MAAO,gBAAiBK,MAAO,iBACjC,CAAEL,MAAO,2BAA4BK,MAAO,4BAC5C,CAAEL,MAAO,cAAeK,MAAO,eAC/B,CAAEL,MAAO,cAAeK,MAAO,eAC/B,CAAEL,MAAO,eAAgBK,MAAO,gBAC7B,CAAEL,MAAO,YAAaK,MAAO,aAC1B,CAAEL,MAAO,UAAWK,MAAO,YACxB,CAAEL,MAAO,iBAAkBK,MAAO,kBAC/B,CAAEL,MAAO,iBAAkBK,MAAO,kBAC/B,CAAEL,MAAO,iBAAkBK,MAAO,kBAC/B,CAAEL,MAAO,qBAAsBK,MAAO,sBACnC,CAAEL,MAAO,sBAAuBK,MAAO,sBACpC,CAAEL,MAAO,qBAAsBK,MAAO,qBACnC,CAAEL,MAAO,kBAAmBK,MAAO,mBAChC,CAAEL,MAAO,iBAAkBK,MAAO,kBAClC,CAAEL,MAAO,uBAAwBK,MAAO,wBACxC,CAAEL,MAAO,iCAAkCK,MAAO,kCAClD,CAAEL,MAAO,wBAAyBK,MAAO,0BACzC,CAAEL,MAAO,iBAAkBK,MAAO,kBAChC,CAAEL,MAAO,mBAAoBK,MAAO,oBAClC,CAAEL,MAAO,iCAAkCK,MAAO,mCAChD,CAAEL,MAAO,mCAAoCK,MAAO,oCAClD,CAAEL,MAAO,2BAA4BK,MAAO,6BAC1C,CAAEL,MAAO,0BAA2BK,MAAO,0BACD,CAAEL,MAAO,sBAAuBK,MAAO,sBACG,CAAEL,MAAO,qBAAsBK,MAAO,sBACI,CAAEL,MAAO,sBAAuBK,MAAO,yBAG/M,cAAC,IAAD,CACAC,kBAAmBjD,EAAa6C,KAAKC,KAAK,WACzCH,MAAOjD,EAAWF,QAClBgD,YAAY,qBACZI,MAAM,iBAIR,cAAC,IAAD,CACaA,MAAM,6BACND,MAAQjD,EAAWH,UAAYG,EAAWH,SAAS2D,mBAAoB,GACvEC,eAvHiB,SAAClD,EAAKmD,GACrCzD,GAAc,SAAC0D,GACf,OAAO,2BAAIA,GAAX,kBAAepD,EAAMmD,QAqH8BP,KAAKC,KAAK,YAC/CC,QAAQ,KAINnD,GAAS,cAAC,IAAD,CAAWqC,QAASrC,IAC7BE,GAAW,cAAC,IAAD,IACX,cAAC,IAAD,CAAQwD,QAAQ,UAAUf,KAAK,SAA/B","file":"static/js/27.784eedd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport MyAlert from '../../Utils/MyAlert';\r\nimport Parse from 'parse';\r\nimport Loading from '../../Utils/Loading';\r\nimport {Form,Button} from 'react-bootstrap';\r\nimport Location from '../../Widgets/LocationBox/Location';\r\n//import {Select} from 'react-select';\r\nimport RichTextArea from '../../Widgets/RichTextArea'\r\nimport SingleSelect from '../../Widgets/ReactSelect/SingleSelect';\r\n\r\nfunction Withdraw(Props) {\r\nconst[number,setNumber]= React.useState(null);\r\n   const[number2,setNumber2]= React.useState(null);\r\n    const tableName = \"TotalInfo2\";\r\n    const initialData = {\r\n        location:{},\r\n        content:'',\r\n         categories:null,\r\n        number:number,\r\n        number2:number2,\r\n\r\n    };\r\n  \r\n    const[sum2,setSum2]= React.useState(0);\r\n    const[sum,setSum]= React.useState(0);\r\n    const[formValues,setFormValues]=React.useState(initialData);\r\n    const[error,setError]=React.useState(null);\r\n    const[loading,setLoading]=React.useState(false);\r\n\r\n const handleChangeWithName =(e)=> {\r\n    console.log('onChange fired with value:', +e.target.value);\r\n    setNumber(()=>{\r\n       return (+e.target.value)\r\n    })\r\n  \r\n  }\r\n  const handleChangeWithName2 =(e)=> {\r\n    console.log('onChange fired with value:', +e.target.value);\r\n    setNumber2(()=>{\r\n       return (+e.target.value)\r\n    })\r\n  }\r\n    const handleLocationSelect=(name,input)=>{\r\nsetFormValues((fV)=>{\r\nreturn {...fV,[name]:input}\r\n})\r\n   }\r\n   \r\n   \r\n    const handleChange = (name,val) =>{\r\n   \r\n       console.log('name is',name,'val is',val)\r\n    setFormValues((fav)=>{\r\n        return {...fav,[name]:val};\r\n        });\r\n\r\n        console.log('formValues:',formValues);\r\n   };\r\n   \r\n    const handleSubmit = async(e)=>{\r\n        try{\r\ne.preventDefault();\r\ne.persist();\r\nawait setLoading(true);\r\n await setError(null);\r\nconst user = Parse.User.current();\r\nconst Post = Parse.Object.extend(tableName);\r\nconst post = new Post();\r\n// write ACL code here\r\nconst acl= new Parse.ACL();\r\nacl.setWriteAccess(user,true);\r\n//private user read access\r\nacl.setReadAccess(user,true);\r\n//acl.setPublicReadAccess(true);\r\npost.setACL(acl);\r\n//post users\r\npost.set('location',formValues.location);\r\npost.set('location_geo',\r\nnew Parse.GeoPoint({\r\n    latitude:formValues.location.lat,\r\n    longitude :formValues.location.lng\r\n}))\r\npost.set('number',number);\r\npost.set('number2',number2);\r\npost.set('categories',formValues.categories);\r\n//post.set('location2',formValues.location2);\r\n//post.set('location_geo_2',2)\r\n\r\npost.set('user',user);\r\nconsole.log('post is',post);\r\nawait post.save();\r\nawait setLoading(false);\r\nProps.history.push('/add2');\r\n        }catch(eror){\r\nconsole.log('eror is :' ,eror);\r\n\r\n await setLoading(false);\r\n await setError(error.message);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n   \r\n\r\n           <Form onSubmit={handleSubmit} >\r\n               \r\n<Form.Group controlId=\"formBasicNumber\">\r\n    <Form.Label>Enter the amount withdraw</Form.Label>\r\n    <Form.Control type=\"number\" placeholder=\"Enter Amount in #\" onChange= {handleChangeWithName} value={number}/>\r\n </Form.Group>\r\n \r\n <Form.Group controlId=\"formBasicNumber\">\r\n    <Form.Label>Enter the charges</Form.Label>\r\n    <Form.Control type=\"number\" placeholder=\"Enter Amount in #\" onChange= {handleChangeWithName2} name=\"number\" value={number2}/>\r\n </Form.Group>\r\n  \r\n<SingleSelect title=\"Choose bank category\"  handleChange={handleChange.bind(this,'categories')} options = {[\r\n    { value: 'Gt bank', label: 'Gt bank' },\r\n    { value: 'First bank', label: 'First bank' },\r\n    { value: 'Sterling Bank', label: 'Sterling bank' },\r\n    { value: 'Access Bank', label: 'Access Bank' },\r\n    { value: 'Fidelity Bank', label: 'Fidelity Bank' },\r\n    { value: 'First City Monument Bank', label: 'First City Monument Bank' },\r\n    { value: 'Union Bank ', label: 'Union Bank ' },\r\n    { value: 'United Bank', label: 'United Bank' },\r\n    { value: 'Zenith Bank ', label: 'Zenith Bank ' },\r\n       { value: 'Citibank ', label: 'Citibank ' },\r\n          { value: 'Ecobank', label: 'Ecobank ' },\r\n             { value: 'Heritage Bank ', label: 'Heritage Bank ' },\r\n                { value: 'Keystone Bank ', label: 'Keystone Bank ' },\r\n                   { value: 'Polaris Bank  ', label: 'Polaris Bank  ' },\r\n                      { value: 'Stanbic IBTC Bank ', label: 'Stanbic IBTC Bank ' },\r\n                         { value: 'Standard Chartered ', label: 'Standard Chartered' },\r\n                            { value: ' Titan Trust Bank ', label: 'Titan Trust Bank ' },\r\n                               { value: 'Unity Bank Plc ', label: 'Unity Bank Plc ' },\r\n                                  { value: 'Wema Bank Plc ', label: 'Wema Bank Plc ' },\r\n                                  { value: 'Globus Bank Limited ', label: 'Globus Bank Limited ' },\r\n                                  { value: 'SunTrust Bank Nigeria Limited ', label: 'SunTrust Bank Nigeria Limited ' },\r\n                                  { value: 'Providus Bank Limited', label: 'Providus Bank Limited ' },\r\n                                  { value: 'Jaiz Bank Plc ', label: 'Jaiz Bank Plc ' },\r\n                                    { value: 'TAJBank Limited ', label: 'TAJBank Limited ' },\r\n                                      { value: 'Mutual Trust Microfinance Bank', label: 'Mutual Trust Microfinance Bank ' },\r\n                                        { value: 'Finca Microfinance Bank Limited ', label: 'Finca Microfinance Bank Limited ' },\r\n                                          { value: 'Coronation Merchant Bank', label: 'Coronation Merchant Bank ' },\r\n                                            { value: 'FBNQuest Merchant Bank ', label: 'FBNQuest Merchant Bank' },\r\n                                                                                      { value: 'FSDH Merchant Bank ', label: 'FSDH Merchant Bank' },\r\n                                                                                                                                { value: 'Rand Merchant Bank', label: 'Rand Merchant Bank' },\r\n                                                                                                                                                                          { value: 'Nova Merchant Bank ', label: 'Nova Merchant Bank' }\r\n  ]}\r\n  />\r\n  <RichTextArea \r\n  handleDescription={handleChange.bind(this,'content')}\r\n   value={formValues.content}\r\n   placeholder=\"Enter your message\"\r\n   title=\"Message area\"\r\n   \r\n   />\r\n        \r\n <Location \r\n              title=\"Enter your current address\"\r\n              value={(formValues.location && formValues.location.formatted_address)||''}\r\n              onHandleSelect={handleLocationSelect.bind(this,'location')}\r\n              options=\"\"\r\n              />\r\n               \r\n               \r\n               {error && <MyAlert   message={error}/>}\r\n               {loading && <Loading />}\r\n                <Button variant=\"primary\" type=\"submit\"  >\r\n    Submit\r\n  </Button>\r\n           </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Withdraw;\r\n"],"sourceRoot":""}