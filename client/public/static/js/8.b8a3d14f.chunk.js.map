{"version":3,"sources":["Projects/Project005/Bluetooth.jsx"],"names":["Bluetooth","props","React","useState","number","setNumber","initialData","location","content","username","formValues","setFormValues","error","setError","loading","setLoading","handleSubmit","e","a","preventDefault","persist","user","Parse","User","current","Post","Object","extend","post","acl","ACL","setWriteAccess","setPublicReadAccess","setACL","set","GeoPoint","latitude","lat","longitude","lng","categories","console","log","save","history","push","message","className","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","name","target","value","bind","this","handleDescription","val","fav","title","formatted_address","onHandleSelect","input","fV","options","variant"],"mappings":"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","file":"static/js/8.b8a3d14f.chunk.js","sourcesContent":["import React from 'react';\r\nimport MyAlert from '../../Utils/MyAlert';\r\nimport Parse from 'parse';\r\nimport Loading from '../../Utils/Loading';\r\nimport {\r\n   Form,\r\n   Button\r\n} from 'react-bootstrap';\r\nimport Location from '../../Widgets/LocationBox/Location';\r\n//import {Select} from 'react-select';\r\nimport RichTextArea from '../../Widgets/RichTextArea'\r\n//import SingleSelect from '../../Widgets/ReactSelect/SingleSelect';\r\nimport './Bluetooth.css';\r\nfunction Bluetooth(props) {\r\nconst[number,setNumber]= React.useState(null);\r\n   \r\n   const tableName = \"Bluetooth\";\r\n   const initialData = {\r\n      location: {},\r\n      content: '',\r\n      \r\n      number:number,\r\n      username:\"\",\r\n      \r\n\r\n      \r\n      \r\n\r\n   };\r\n\r\n   \r\n   const [formValues, setFormValues] = React.useState(initialData);\r\n   const [error, setError] = React.useState(null);\r\n   const [loading, setLoading] = React.useState(false);\r\n  \r\n  \r\n  const handleChangeWithName =(e)=> {\r\n    console.log('onChange fired with value:', +e.target.value);\r\n    setNumber(()=>{\r\n       return (+e.target.value)\r\n    })\r\n  \r\n  }\r\n    const handleChangeWithName2 =(name,e)=> {\r\n    \r\n    setFormValues(()=>{\r\n       return {\r\n           ...formValues,\r\n           [e.target.name]:e.target.value\r\n       }\r\n    })\r\n  \r\n  }\r\n   \r\n\r\n   const handleLocationSelect = (name, input) => {\r\n      setFormValues((fV) => {\r\n         return {\r\n            ...fV,\r\n            [name]: input\r\n         }\r\n      })\r\n   }\r\n\r\n   \r\n    \r\n\r\n  \r\n \r\n\r\n   const handleChange = (name, val) => {\r\n\r\n      console.log('name is', name, 'val is', val)\r\n      setFormValues((fav) => {\r\n         return {\r\n            ...fav,\r\n            [name]: val\r\n         };\r\n      });\r\n\r\n      console.log('formValues:', formValues);\r\n   };\r\n   \r\n   const handleSubmit = async (e) => {\r\n      try {\r\n         e.preventDefault();\r\n         e.persist();\r\n         await setLoading(true);\r\n         await setError(null);\r\n         const user = Parse.User.current();\r\n         const Post = Parse.Object.extend(tableName);\r\n         const post = new Post();\r\n         // write ACL code here\r\n         const acl = new Parse.ACL();\r\n         acl.setWriteAccess(user, true);\r\n         //private user read access\r\n         //acl.setReadAccess(user,true);\r\n         \r\n         acl.setPublicReadAccess(true);\r\n         post.setACL(acl);\r\n         //post users\r\n         post.set('location', formValues.location);\r\n         post.set('location_geo',\r\n            new Parse.GeoPoint({\r\n               latitude: formValues.location.lat,\r\n               longitude: formValues.location.lng\r\n            }))\r\n            post.set('content',formValues.content)\r\n            post.set('number',number);\r\n            post.set('username',formValues.username);\r\n            \r\n        \r\n   \r\n         post.set('categories', formValues.categories);\r\n         //post.set('location2',formValues.location2);\r\n         //post.set('location_geo_2',2)\r\n\r\n         post.set('user', user);\r\n         console.log('post is', post);\r\n         await post.save();\r\n         await setLoading(false);\r\n         props.history.push('/sucessful');\r\n      } catch (eror) {\r\n         console.log('eror is :', eror);\r\n\r\n         await setLoading(false);\r\n         await setError(error.message);\r\n      }\r\n   };\r\n    return (\r\n        <div className=\"repair\">\r\n   \r\n\r\n           <Form onSubmit={handleSubmit} >\r\n             <Form.Group controlId=\"formBasicName\">\r\n    <Form.Label>Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter your name\" onChange= {handleChangeWithName2.bind(this,'username')} value={formValues.value} name=\"username\"/>\r\n </Form.Group>  \r\n<Form.Group controlId=\"formBasicNumber\">\r\n    <Form.Label>Enter Phone number</Form.Label>\r\n    <Form.Control type=\"number\" placeholder=\"Enter your phone number\" onChange= {handleChangeWithName} value={number} />\r\n </Form.Group>\r\n  \r\n \r\n \r\n \r\n \r\n\r\n  <RichTextArea \r\n  handleDescription={handleChange.bind(this,'content')}\r\n   value={formValues.content}\r\n   placeholder=\"Enter your message\"\r\n   title=\"Quantity\"\r\n   \r\n   />\r\n        \r\n <Location \r\n              title=\"Enter your current address\"\r\n              value={(formValues.location && formValues.location.formatted_address)||''}\r\n              onHandleSelect={handleLocationSelect.bind(this,'location')}\r\n              options=\"\"\r\n              />\r\n               \r\n               \r\n               {error && <MyAlert   message={error}/>}\r\n               {loading && <Loading />}\r\n                <Button variant=\"primary\" type=\"submit\"  >\r\n    Submit\r\n  </Button>\r\n           </Form>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n     \r\n   }\r\n\r\n   export default Bluetooth;\r\n"],"sourceRoot":""}